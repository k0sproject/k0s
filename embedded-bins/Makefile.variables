# renovate: datasource=docker depName=docker.io/library/alpine versioning=docker
alpine_patch_version = 3.22.2
alpine_version = $(word 1,$(subst ., ,$(alpine_patch_version))).$(word 2,$(subst ., ,$(alpine_patch_version)))
golang_buildimage=docker.io/library/golang:$(go_version)-alpine$(alpine_version)
go_version = 1.24.8

# renovate: datasource=github-releases depName=opencontainers/runc
runc_version = 1.3.2
runc_buildimage = $(golang_buildimage)
runc_build_go_tags = "seccomp"
#runc_build_go_cgo_enabled =
#runc_build_go_cgo_cflags =
#runc_build_go_flags =
#runc_build_go_ldflags =
runc_build_go_ldflags_extra = "-w -s -extldflags=-static"

containerd_version = 1.7.28
containerd_buildimage = $(golang_buildimage)
containerd_build_go_tags = "apparmor,selinux"
containerd_build_shim_go_cgo_enabled = 0
#containerd_build_go_cgo_enabled =
#containerd_build_go_cgo_cflags =
#containerd_build_go_flags =
#containerd_build_go_ldflags =
containerd_build_go_ldflags_extra = "-w -s -extldflags=-static"

kubernetes_version = 1.34.1
kubernetes_buildimage = $(golang_buildimage)
kubernetes_build_go_tags = "providerless"
#kubernetes_build_go_cgo_enabled =
#kubernetes_build_go_cgo_cflags =
kubernetes_build_go_flags = "-v"
#kubernetes_build_go_ldflags =
kubernetes_build_go_ldflags_extra = "-extldflags=-static"

kine_version = 0.14.6
kine_buildimage = $(golang_buildimage)
kine_build_go_tags = nats
#kine_build_go_cgo_enabled =
# Flags taken from https://github.com/k3s-io/kine/blob/v0.14.6/scripts/build#L25
kine_build_go_cgo_cflags = -DSQLITE_ENABLE_DBSTAT_VTAB=1 -DSQLITE_USE_ALLOCA=1

#kine_build_go_flags =
kine_build_go_ldflags = "-w -s"
kine_build_go_ldflags_extra = "-extldflags=-static"

# renovate: datasource=github-releases depName=etcd-io/etcd
etcd_version = 3.6.5
etcd_buildimage = $(golang_buildimage)
#etcd_build_go_tags =
etcd_build_go_cgo_enabled = 0
#etcd_build_go_cgo_cflags =
#etcd_build_go_flags =
etcd_build_go_ldflags = "-w -s"
#etcd_build_go_ldflags_extra =

# renovate: datasource=github-tags depName=kubernetes-sigs/apiserver-network-proxy
konnectivity_version = 0.33.0
konnectivity_buildimage = $(golang_buildimage)
#konnectivity_build_go_tags =
konnectivity_build_go_cgo_enabled = 0
#konnectivity_build_go_cgo_cflags =
konnectivity_build_go_flags = "-a"
konnectivity_build_go_ldflags = "-w -s"
konnectivity_build_go_ldflags_extra = "-extldflags=-static"

iptables_version = 1.8.11
iptables_buildimage = docker.io/library/alpine:$(alpine_patch_version)

# renovate: datasource=github-tags depName=acassen/keepalived
keepalived_version = 2.3.4
keepalived_buildimage = docker.io/library/alpine:$(alpine_patch_version)

clean-iid-files = \
	for i in $(IID_FILES); do \
	  [ -f "$$i" ] || continue; \
	  tags=$$(docker inspect --format='{{range $$i,$$tag := .RepoTags}}{{if $$i}} {{end}}{{$$tag}}{{end}}' -- "$$(cat -- "$$i")") && \
	  [ -z "$$tags" ] || docker rmi -f -- $$tags; \
	  rm -f -- "$$i"; \
	done
