// SPDX-FileCopyrightText: k0s authors
// SPDX-License-Identifier: Apache-2.0

// Code generated by client-gen. DO NOT EDIT.

package fake

import (
	v1beta1 "github.com/k0sproject/k0s/pkg/apis/etcd/v1beta1"
	etcdv1beta1 "github.com/k0sproject/k0s/pkg/client/clientset/typed/etcd/v1beta1"
	gentype "k8s.io/client-go/gentype"
)

// fakeEtcdMembers implements EtcdMemberInterface
type fakeEtcdMembers struct {
	*gentype.FakeClientWithList[*v1beta1.EtcdMember, *v1beta1.EtcdMemberList]
	Fake *FakeEtcdV1beta1
}

func newFakeEtcdMembers(fake *FakeEtcdV1beta1) etcdv1beta1.EtcdMemberInterface {
	return &fakeEtcdMembers{
		gentype.NewFakeClientWithList[*v1beta1.EtcdMember, *v1beta1.EtcdMemberList](
			fake.Fake,
			"",
			v1beta1.SchemeGroupVersion.WithResource("etcdmembers"),
			v1beta1.SchemeGroupVersion.WithKind("EtcdMember"),
			func() *v1beta1.EtcdMember { return &v1beta1.EtcdMember{} },
			func() *v1beta1.EtcdMemberList { return &v1beta1.EtcdMemberList{} },
			func(dst, src *v1beta1.EtcdMemberList) { dst.ListMeta = src.ListMeta },
			func(list *v1beta1.EtcdMemberList) []*v1beta1.EtcdMember { return gentype.ToPointerSlice(list.Items) },
			func(list *v1beta1.EtcdMemberList, items []*v1beta1.EtcdMember) {
				list.Items = gentype.FromPointerSlice(items)
			},
		),
		fake,
	}
}
