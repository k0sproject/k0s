// SPDX-FileCopyrightText: k0s authors
// SPDX-License-Identifier: Apache-2.0

// Code generated by client-gen. DO NOT EDIT.

package fake

import (
	v1beta2 "github.com/k0sproject/k0s/pkg/apis/autopilot/v1beta2"
	autopilotv1beta2 "github.com/k0sproject/k0s/pkg/client/clientset/typed/autopilot/v1beta2"
	gentype "k8s.io/client-go/gentype"
)

// fakePlans implements PlanInterface
type fakePlans struct {
	*gentype.FakeClientWithList[*v1beta2.Plan, *v1beta2.PlanList]
	Fake *FakeAutopilotV1beta2
}

func newFakePlans(fake *FakeAutopilotV1beta2) autopilotv1beta2.PlanInterface {
	return &fakePlans{
		gentype.NewFakeClientWithList[*v1beta2.Plan, *v1beta2.PlanList](
			fake.Fake,
			"",
			v1beta2.SchemeGroupVersion.WithResource("plans"),
			v1beta2.SchemeGroupVersion.WithKind("Plan"),
			func() *v1beta2.Plan { return &v1beta2.Plan{} },
			func() *v1beta2.PlanList { return &v1beta2.PlanList{} },
			func(dst, src *v1beta2.PlanList) { dst.ListMeta = src.ListMeta },
			func(list *v1beta2.PlanList) []*v1beta2.Plan { return gentype.ToPointerSlice(list.Items) },
			func(list *v1beta2.PlanList, items []*v1beta2.Plan) { list.Items = gentype.FromPointerSlice(items) },
		),
		fake,
	}
}
