{
  "$schema": "https://docs.renovatebot.com/renovate-schema.json",
  "extends": [
    "config:recommended",
    ":configMigration",
    ":gitSignOff",
    ":automergeMinor"
  ],
  "gitAuthor": "Renovate Bot <renovate@whitesourcesoftware.com>",
  "labels": [
    "dependencies"
  ],
  "baseBranchPatterns": [
    "main",
    "/^release-1\\.3[0-3]$/"
  ],
  "prTitleStrict": true,
  "enabledManagers": [
    "gomod",
    "custom.regex"
  ],
  "postUpdateOptions": [
    "gomodTidy"
  ],
  "packageRules": [
    {
      "description": "Ignore all Go dependencies by default",
      "enabled": false,
      "matchManagers": [
        "gomod"
      ]
    },
    {
      "description": "Group all Kubernetes updates",
      "enabled": true,
      "matchPackageNames": [
        "k8s.io/api",
        "k8s.io/apiextensions-apiserver",
        "k8s.io/apimachinery",
        "k8s.io/apiserver",
        "k8s.io/cli-runtime",
        "k8s.io/client-go",
        "k8s.io/cloud-provider",
        "k8s.io/cluster-bootstrap",
        "k8s.io/code-generator",
        "k8s.io/component-base",
        "k8s.io/component-helpers",
        "k8s.io/controller-manager",
        "k8s.io/cri-api",
        "k8s.io/cri-client",
        "k8s.io/csi-translation-lib",
        "k8s.io/dynamic-resource-allocation",
        "k8s.io/endpointslice",
        "k8s.io/externaljwt",
        "k8s.io/kms",
        "k8s.io/kube-aggregator",
        "k8s.io/kube-controller-manager",
        "k8s.io/kube-proxy",
        "k8s.io/kube-scheduler",
        "k8s.io/kubectl",
        "k8s.io/kubelet",
        "k8s.io/kubernetes",
        "k8s.io/metrics",
        "k8s.io/mount-utils",
        "k8s.io/pod-security-admission",
        "k8s.io/sample-apiserver",
        "k8s.io/sample-cli-plugin",
        "k8s.io/sample-controller",
        "kubernetes/kubernetes",
        "quay.io/k0sproject/kube-proxy"
      ],
      "groupName": "Kubernetes dependencies",
      "groupSlug": "kubernetes-all"
    },
    {
      "description": "Group all etcd updates",
      "enabled": true,
      "matchPackageNames": [
        "go.etcd.io/etcd/**/v3",
        "etcd-io/etcd"
      ],
      "groupName": "etcd dependencies",
      "groupSlug": "etcd-all"
    },
    {
      "description": "Group all konnectivity updates",
      "enabled": true,
      "matchDepNames": [
        "**/apiserver-network-proxy*",
        "sigs.k8s.io/apiserver-network-proxy/*"
      ],
      "groupName": "konnectivity dependencies",
      "groupSlug": "konnectivity"
    },
    {
      "description": "Group all Helm updates",
      "enabled": true,
      "matchDepNames": [
        "helm.sh/helm/**",
        "helm/helm"
      ],
      "groupName": "Helm dependencies",
      "groupSlug": "helm"
    },
    {
      "description": "Group all sonobuoy updates",
      "enabled": true,
      "matchDepNames": [
        "**/sonobuoy"
      ],
      "groupName": "sonobuoy dependencies",
      "groupSlug": "sonobuoy"
    },
    {
      "description": "Run codegen if required",
      "matchDepNames": [
        "kubernetes-sigs/controller-tools"
      ],
      "postUpgradeTasks": {
        "executionMode": "branch",
        "commands": [
          "install-tool golang $(./vars.sh go_version)",
          "make DOCKER='' EMBEDDED_BINS_BUILDMODE=none codegen"
        ]
      }
    },
    {
      "description": "Only update the main branch by default",
      "enabled": false,
      "prTitleStrict": false,
      "matchBaseBranches": [
        "!main"
      ]
    },
    {
      "description": "Bump Envoy for release-1.33",
      "enabled": true,
      "matchBaseBranches": [
        "release-1.33"
      ],
      "matchDepNames": [
        "quay.io/k0sproject/envoy-distroless"
      ],
      "allowedVersions": "<=1.32"
    },
    {
      "description": "Bump Go for release-1.32",
      "enabled": true,
      "matchBaseBranches": [
        "release-1.32"
      ],
      "matchDepNames": [
        "go"
      ],
      "allowedVersions": "<=1.23"
    },
    {
      "description": "Bump Envoy for release-1.32",
      "enabled": true,
      "matchBaseBranches": [
        "release-1.32"
      ],
      "matchDepNames": [
        "quay.io/k0sproject/envoy-distroless"
      ],
      "allowedVersions": "<=1.31"
    }
  ],
  "customManagers": [
    {
      "customType": "regex",
      "description": "Update minimum Go version",
      "managerFilePatterns": [
        "**/go.mod"
      ],
      "matchStrings": [
        "^go (?<currentValue>\\d+\\.\\d+)\\.0\\b"
      ],
      "depNameTemplate": "go",
      "datasourceTemplate": "golang-version",
      "extractVersionTemplate": "^(?<version>\\d+\\.\\d+)",
      "versioningTemplate": "loose"
    },
    {
      "customType": "regex",
      "description": "Update Go toolchain version",
      "managerFilePatterns": [
        "**/*"
      ],
      "matchStrings": [
        "\\bgo_version = (?<currentValue>\\d+(\\.\\d+){2})",
        "\\bgolang/go/blob/go(?<currentValue>\\d+(\\.\\d+){2})"
      ],
      "depNameTemplate": "go",
      "datasourceTemplate": "golang-version",
      "versioningTemplate": "semver"
    },
    {
      "customType": "regex",
      "description": "Update container image tags in non-Dockerfiles",
      "managerFilePatterns": [
        "**/*.go",
        "**/*.md",
        "**/*.patch",
        "**/*.py",
        "**/*.sh",
        "**/*.tf",
        "**/*.tftpl",
        "**/*.txt",
        "**/*.yaml",
        "**/*.yml"
      ],
      "matchStrings": [
        "\\b(?<depName>(docker|quay)\\.io/[a-z0-9][a-z0-9._-]*/[a-z0-9][a-z0-9._-]*)(:|.*\\n.*= \")v?(?<currentValue>[a-z0-9_][\\w.-]{0,127})"
      ],
      "datasourceTemplate": "docker",
      "extractVersionTemplate": "^v?(?<version>[\\w][\\w.-]{0,127})"
    },
    {
      "customType": "regex",
      "description": "Update Kubernetes versions across the codebase",
      "managerFilePatterns": [
        "/(^|/)[Mm]akefile(\\.[^/]+)?$/",
        "**/*.go",
        "go.mod"
      ],
      "matchStrings": [
        "kubernetes_version = (?<currentValue>\\d+(\\.\\d+){2})",
        "\\bkubernetes/kubernetes/blob/v(?<currentValue>\\d+(\\.\\d+){2})"
      ],
      "depNameTemplate": "kubernetes/kubernetes",
      "datasourceTemplate": "github-releases",
      "versioningTemplate": "semver"
    },
    {
      "customType": "regex",
      "description": "Update kine versions across the codebase",
      "managerFilePatterns": [
        "/(^|/)[Mm]akefile(\\.[^/]+)?$/",
        "**/*.go"
      ],
      "matchStrings": [
        "kine_version = (?<currentValue>\\d+(\\.\\d+){2})",
        "\\bkine/blob/v(?<currentValue>\\d+(\\.\\d+){2})"
      ],
      "depNameTemplate": "k3s-io/kine",
      "datasourceTemplate": "github-releases",
      "versioningTemplate": "semver"
    },
    {
      "customType": "regex",
      "description": "Generic version updates based on comments",
      "managerFilePatterns": [
        "**/Makefile*",
        "**/Dockerfile*",
        "**/*.yaml",
        "**/*.yml"
      ],
      "matchStrings": [
        "# renovate: datasource=(?<datasource>\\S+)( registryUrl=(?<registryUrl>.+))? depName=(?<depName>\\S+)( versioning=(?<versioning>.+))?\\n[^:=\\n]+[:=][ \\t]*[\"']?(?<currentValue>\\S+?)[\"']?[ \\t]*(:?#|\\n)",
        "[=:][ \\t]*[\"']?(?<currentValue>\\S+?)[\"']?[ \\t]*# renovate: datasource=(?<datasource>\\S+)( registryUrl=(?<registryUrl>.+))? depName=(?<depName>\\S+)( versioning=(?<versioning>.+))?\\n"
      ],
      "datasourceTemplate": "{{{datasource}}}",
      "versioningTemplate": "{{#if versioning}}{{{versioning}}}{{else}}semver{{/if}}",
      "extractVersionTemplate": "^v?(?<version>.+)"
    }
  ]
}
