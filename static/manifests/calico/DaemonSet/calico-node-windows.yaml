---
{{ if and .IncludeWindows (eq .Mode "vxlan") -}}
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: calico-node-windows
  namespace: kube-system
  labels:
    k8s-app: calico-node-windows
spec:
  selector:
    matchLabels:
      k8s-app: calico-node-windows
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
  template:
    metadata:
      labels:
        k8s-app: calico-node-windows
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/port: '9091'
    spec:
      nodeSelector:
        kubernetes.io/os: windows
      hostNetwork: true
      tolerations:
        # Make sure calico-node gets scheduled on all nodes.
        - effect: NoSchedule
          operator: Exists
        # Mark the pod as a critical add-on for rescheduling.
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoExecute
          operator: Exists
      serviceAccountName: calico-node
      terminationGracePeriodSeconds: 5
      priorityClassName: system-node-critical
      securityContext:
        windowsOptions:
          hostProcess: true
          runAsUserName: NT AUTHORITY\system
      initContainers:
      - name: uninstall-calico
        image: "{{ .CalicoNodeWindowsImage }}"
        imagePullPolicy: "{{ .PullPolicy }}"
        args:
        - $env:CONTAINER_SANDBOX_MOUNT_POINT/uninstall-calico.ps1
        env:
        - name: CNI_BIN_DIR
          value: /host/opt/cni/bin
        - name: CNI_CONF_NAME
          value: 10-calico.conflist
        - name: CNI_NET_DIR
          value: /host/etc/cni/net.d
        - name: SLEEP
          value: "false"
        volumeMounts:
        - mountPath: /host/opt/cni/bin
          name: cni-bin-dir
        - mountPath: /host/etc/cni/net.d
          name: cni-net-dir
      - name: install-cni
        image: "{{ .CalicoCNIWindowsImage }}"
        imagePullPolicy: "{{ .PullPolicy }}"
        command:
        - $env:CONTAINER_SANDBOX_MOUNT_POINT/opt/cni/bin/install.exe
        env:
        - name: CNI_BIN_DIR
          value: /host/opt/cni/bin
        - name: CNI_NET_DIR
          value: /host/etc/cni/net.d
        # Name of the CNI config file to create.
        - name: CNI_CONF_NAME
          value: "10-calico.conflist"
        # The CNI network config to install on each node.
        - name: CNI_NETWORK_CONFIG
          valueFrom:
            configMapKeyRef:
              name: calico-config
              key: cni_network_config_windows
              # Use the defaults that are encoded in the Calico install executable if not specified.
              optional: true
        # Set the hostname based on the k8s node name.
        - name: KUBERNETES_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: KUBERNETES_SERVICE_HOST
          value: "{{ .APIServer.Host }}"
        - name: KUBERNETES_SERVICE_PORT
          value: "{{ .APIServer.Port }}"
        - name: KUBERNETES_DNS_SERVERS
          value: "{{ .ClusterDNSIP }}"
        - name: KUBERNETES_SERVICE_CIDRS
          value: "{{ .ServiceCIDRIPv4 }}"
        # CNI MTU Config variable
        - name: CNI_MTU
          value: "{{ .MTU }}"
        # Prevents the container from sleeping forever.
        - name: SLEEP
          value: "false"
        - name: VXLAN_VNI
          value: "{{ .VxlanVNI }}"
        volumeMounts:
        - mountPath: /host/opt/cni/bin
          name: cni-bin-dir
        - mountPath: /host/etc/cni/net.d
          name: cni-net-dir
      containers:
      - name: felix
        image: "{{ .CalicoNodeWindowsImage }}"
        imagePullPolicy: "{{ .PullPolicy }}"
        args:
        - $env:CONTAINER_SANDBOX_MOUNT_POINT/CalicoWindows/felix-service.ps1
        workingDir: $env:CONTAINER_SANDBOX_MOUNT_POINT/CalicoWindows/
        env:
        # Use Kubernetes API as the backing datastore.
        - name: DATASTORE_TYPE
          value: "kubernetes"
        # Wait for the datastore.
        - name: WAIT_FOR_DATASTORE
          value: "true"
        # Set based on the k8s node name.
        - name: NODENAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: KUBERNETES_SERVICE_HOST
          value: "{{ .APIServer.Host }}"
        - name: KUBERNETES_SERVICE_PORT
          value: "{{ .APIServer.Port }}"
        # Choose the backend to use.
        - name: CALICO_NETWORKING_BACKEND
          value: vxlan
        # Cluster type to identify the deployment type
        - name: CLUSTER_TYPE
          value: "k8s,windows"
        - name: FELIX_DEFAULTENDPOINTTOHOSTACTION
          value: ACCEPT # FIXME: Is this env var required?
        - name: FELIX_HEALTHENABLED
          value: "true"
        - name: FELIX_VXLANPORT
          value: "{{ .VxlanPort }}"
        - name: FELIX_VXLANVNI
          value: "{{ .VxlanVNI }}"
        # Set MTU for the VXLAN tunnel device.
        - name: FELIX_VXLANMTU
          value: "{{ .MTU }}"
        - name: KUBE_NETWORK
          value: Calico.*
        - name: IP
          value: {{ .IPAutodetectionMethod }}
        - name: IP_AUTODETECTION_METHOD
          value: {{ .IPAutodetectionMethod }}
        - name: IP6
          value: none
        - name: FELIX_IPV6SUPPORT
          value: "false"
        lifecycle:
          preStop:
            exec:
              command:
              - $env:CONTAINER_SANDBOX_MOUNT_POINT/CalicoWindows/calico-node.exe
              - -shutdown
        readinessProbe:
          exec:
            command:
            - $env:CONTAINER_SANDBOX_MOUNT_POINT/CalicoWindows/calico-node.exe
            - -felix-ready
          timeoutSeconds: 10
        livenessProbe:
          exec:
            command:
            - $env:CONTAINER_SANDBOX_MOUNT_POINT/CalicoWindows/calico-node.exe
            - -felix-live
          failureThreshold: 6
          initialDelaySeconds: 10
          timeoutSeconds: 10
        volumeMounts:
        - mountPath: /var/log/calico/cni
          name: cni-log-dir
        - mountPath: /host/etc/cni/net.d
          name: cni-net-dir
        - mountPath: /var/lib/calico
          name: var-lib-calico
        - mountPath: /var/run/calico
          name: var-run-calico
      - name: node
        image: "{{ .CalicoNodeWindowsImage }}"
        imagePullPolicy: "{{ .PullPolicy }}"
        args:
        - $env:CONTAINER_SANDBOX_MOUNT_POINT/CalicoWindows/node-service.ps1
        workingDir: $env:CONTAINER_SANDBOX_MOUNT_POINT/CalicoWindows/
        env:
        - name: DATASTORE_TYPE
          value: kubernetes
        - name: WAIT_FOR_DATASTORE
          value: "true"
        - name: CLUSTER_TYPE
          value: k8s,windows
        - name: FELIX_DEFAULTENDPOINTTOHOSTACTION
          value: ACCEPT
        - name: FELIX_HEALTHENABLED
          value: "true"
        - name: NODENAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: KUBERNETES_SERVICE_HOST
          value: "{{ .APIServer.Host }}"
        - name: KUBERNETES_SERVICE_PORT
          value: "{{ .APIServer.Port }}"
        - name: VXLAN_VNI
          value: "{{ .VxlanVNI }}"
        - name: CALICO_MANAGE_CNI
          value: "true"
        - name: KUBE_NETWORK
          value: Calico.*
        - name: IP
          value: {{ .IPAutodetectionMethod }}
        - name: IP_AUTODETECTION_METHOD
          value: {{ .IPAutodetectionMethod }}
        - name: IP6
          value: none
        - name: FELIX_IPV6SUPPORT
          value: "false"
        volumeMounts:
        - mountPath: /var/log/calico/cni
          name: cni-log-dir
        - mountPath: /host/etc/cni/net.d
          name: cni-net-dir
        - mountPath: /var/lib/calico
          name: var-lib-calico
        - mountPath: /var/run/calico
          name: var-run-calico
      volumes:
      - hostPath:
          path: /opt/cni/bin
          type: DirectoryOrCreate
        name: cni-bin-dir
      - hostPath:
          path: /var/log/calico/cni
          type: DirectoryOrCreate
        name: cni-log-dir
      - hostPath:
          path: /etc/cni/net.d
        name: cni-net-dir
      - hostPath:
          path: /var/lib/calico
          type: DirectoryOrCreate
        name: var-lib-calico
      - hostPath:
          path: /var/run/calico
          type: DirectoryOrCreate
        name: var-run-calico
{{ end -}}
