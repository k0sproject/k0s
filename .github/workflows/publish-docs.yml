name: Publish docs via GitHub Pages
on:
  push:
    branches:
      - main
  release:
    types:
      - published
  workflow_dispatch:
    inputs:
      version:
        description: 'Version tag (e.g."v1.22.4+k0s.0")'
        required: true

env:
  GO_VERSION: ^1.17
  NODE_VERSION: 12.x
  PYTHON_VERSION: 3.x

jobs:
  build:
    name: Deploy docs
    runs-on: ubuntu-latest
    steps:
      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install mkdocs
          pip install mkdocs-exclude
          pip install git+https://${{ secrets.GH_TOKEN }}@github.com/lensapp/mkdocs-material-insiders.git
          pip install mike

      - name: Checkout k0s release
        uses: actions/checkout@v2
        if: "!github.event.workflow_dispatch"
        with:
          fetch-depth: 0

      - name: Checkout k0s main
        uses: actions/checkout@v2
        if: github.event.workflow_dispatch
        with:
          ref: '${{ github.event.inputs.version }}'
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GO_VERSION }}
        id: go

      - uses: actions/cache@v2
        name: Go modules cache
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Generate docs
        run: make docs EMBEDDED_BINS_BUILDMODE=none

      - name: git config
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

      - name: Setup Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: mike deploy main
        if: "!github.event.workflow_dispatch && contains(github.ref, 'refs/heads/main')"
        run: |
          mike deploy --push main

      - name: Get the release version
        if: "!github.event.workflow_dispatch && contains(github.ref, 'refs/tags/v') && !github.event.release.prerelease" # (don't generate for pre-releases)
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}

      - name: mike deploy new release
        if: "!github.event.workflow_dispatch && contains(github.ref, 'refs/tags/v') && !github.event.release.prerelease" # (don't generate for pre-releases)
        run: |
          mike deploy --push --update-aliases ${{ steps.get_version.outputs.VERSION }} latest
          mike set-default --push ${{ steps.get_version.outputs.VERSION }}

      - name: mike deploy ${{ github.event.inputs.version }}
        if: github.event.workflow_dispatch
        run: |
          mike deploy --push --force ${{ github.event.inputs.version }}
