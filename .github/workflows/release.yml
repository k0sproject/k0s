name: Release

on:
  push:
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  build:
    name: Create Release
    runs-on: [self-hosted,linux]
    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: ^1.13
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      # Ugly hack to get the tag name
      # github.ref gives the full reference like refs.tags.v0.0.1-beta1
      - name: Branch name
        id: branch_name
        run: |
          echo ::set-output name=TAG_NAME::${GITHUB_REF#refs/tags/}

      - name: Build
        run: make -j$(nproc) EMBEDDED_BINS_BUILDMODE=docker
        env:
          VERSION: ${{ steps.branch_name.outputs.TAG_NAME }}


      - name: Clean Docker
        run: |
          docker system prune --all --volumes --force

      - name: Run smoke test
        run: make check-network

      - name: Collect smoke test logs
        if: failure()
        uses: actions/upload-artifact@v2
        with:
          name: logs
          path: tests/*.log

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: true # So we can manually edit before publishing
          prerelease: ${{ contains(github.ref, '-') }} # v0.1.2-beta1, 1.2.3-rc1

      - name: Upload Release Assets
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./mke
          asset_name: mke-${{ steps.branch_name.outputs.TAG_NAME }}-amd64
          asset_content_type: application/octet-stream
