# SPDX-License-Identifier: Apache-2.0
# SPDX-FileCopyrightText: 2024 k0s authors

name: Smoke test

on:
  workflow_call:
    inputs:
      arch:
        type: string
        required: true
        description: The architecture to test k0s on.
      name:
        type: string
        required: true
        description: The integration test name to be executed.
      k0s-reference-version:
        type: string
        description: >-
          The k0s release version to be used as a reference.
          Mostly used for Autopilot upgrade checks.

permissions:
  contents: read

jobs:
  smoketest:
    name: Test
    runs-on: ${{ inputs.arch == 'arm64' && 'ubuntu-24.04-arm' || 'ubuntu-24.04' }}

    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v4
        with:
          persist-credentials: false
          show-progress: false

      - name: Reclaim runner disk space
        run: .github/workflows/reclaim-runner-disk-space.bash

      - name: Prepare build environment
        run: .github/workflows/prepare-build-env.sh

      - name: Prepare Docker for ipv6 tests
        if: contains(inputs.name, 'dualstack') || contains(inputs.name, 'ipv6')
        run: .github/workflows/prepare-docker-ipv6.sh

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Download compiled executable
        uses: actions/download-artifact@v5
        with:
          name: k0s-linux-${{ inputs.arch }}

      - name: k0s sysinfo
        run: |
          chmod +x k0s
          ./k0s sysinfo

      - name: Download airgap image bundle
        if: contains(inputs.name, 'airgap') || contains(inputs.name, 'ipv6')
        uses: actions/download-artifact@v5
        with:
          name: airgap-image-bundle-linux-${{ inputs.arch }}

      - name: Download ipv6 image bundle
        if: inputs.name == 'calico-ipv6' || inputs.name == 'kuberouter-ipv6' || (startsWith(inputs.name, 'network-conformance-') && contains(inputs.name, '-ipv6'))
        uses: actions/download-artifact@v5
        with:
          name: ipv6-image-bundle-linux-${{ inputs.arch }}

      - name: Download k0s reference release
        if: inputs.k0s-reference-version != ''
        env:
          K0S_VERSION: ${{ inputs.k0s-reference-version }}
        run: |
          curl --proto '=https' --tlsv1.2 -sSLo "k0s-$K0S_VERSION" --retry 5 --retry-all-errors "https://github.com/k0sproject/k0s/releases/download/$K0S_VERSION/k0s-$K0S_VERSION-${{ inputs.arch }}"
          chmod +x "k0s-$K0S_VERSION"
          ./"k0s-$K0S_VERSION" version
          k0sRealPath="$(realpath "k0s-$K0S_VERSION")"
          echo K0S_UPDATE_FROM_PATH="$k0sRealPath" >>"$GITHUB_ENV"

      - name: Run inttest
        env:
          SMOKETEST_NAME: check-${{ inputs.name }}
        run: make -C inttest "$SMOKETEST_NAME"

      - name: Collect k0s logs, support bundle and conformance test results
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: ${{ inputs.name }}-${{ inputs.arch }}-files
          path: |
            /tmp/*.log
            /tmp/support-bundle.tar.gz
            /tmp/*_sonobuoy_*.tar.gz
