name: Go build

on:
  push:
    branches:
      - main
      - release-*
    paths-ignore:
      - 'docs/**'
      - 'examples/**'
      - '**.md'
      - LICENSE
      - '**.svg'
      - '.github/workflows/docs.yml'
      - '.github/workflows/mkdocs-set-default-version.yml'
      - 'mkdocs.yml'
  pull_request:
    branches:
      - main
      - release-*
    paths-ignore:
      - 'docs/**'
      - 'examples/**'
      - '**.md'
      - LICENSE
      - '**.svg'
      - '.github/workflows/docs.yml'
      - '.github/workflows/mkdocs-set-default-version.yml'
      - 'mkdocs.yml'
env:
  GO_VERSION: ^1.16
  GO_VERSION_WIN: ^1.13

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Get PR Reference and Set Cache Name
        run: |
          PR_NUMBER=$(echo ${GITHUB_REF} | cut -d / -f 3 )
          echo "cachePrefix=k0s-${PR_NUMBER}-${{ github.sha }}" >> $GITHUB_ENV

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GO_VERSION }}
        id: go

      - uses: actions/cache@v2
        name: Go modules cache
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Bindata cache
        uses: actions/cache@v2
        id: generated-bindata
        with:
          path: |
            .bins.linux.stamp
            embedded-bins/staging/linux/bin/
            bindata_linux
            pkg/assets/zz_generated_offsets_linux.go
            embedded-bins/Makefile.variables

          key: ${{ runner.os }}-embedded-bins-${{ hashFiles('**/embedded-bins/**/*') }}
          restore-keys: |
            ${{ runner.os }}-embedded-bins-${{ hashFiles('**/embedded-bins/**/*') }}

      - name: Build
        run: make build

      - name: Run unit tests
        run: make check-unit

      - name: Cache compiled binary for further testing
        uses: actions/cache@v2
        id: cache-compiled-binary
        with:
          path: |
            k0s
          key: build-${{env.cachePrefix}}

  build_windows:
    name: Build windows
    runs-on: ubuntu-latest
    steps:
      - name: Get PR Reference and Set Cache Name
        run: |
          PR_NUMBER=$(echo ${GITHUB_REF} | cut -d / -f 3 )
          echo "cachePrefix=k0s-win-${PR_NUMBER}-${{ github.sha }}" >> $GITHUB_ENV

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GO_VERSION_WIN }}
        id: go

      - uses: actions/cache@v2
        name: Go modules cache
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-win-

      - name: Bindata cache
        uses: actions/cache@v2
        id: generated-bindata
        with:
          path: |
            .bins.windows.stamp
            embedded-bins/staging/windows/bin/
            bindata_windows
            pkg/assets/zz_generated_offsets_windows.go
            embedded-bins/Makefile.variables

          key: ${{ runner.os }}-embedded-bins-win-${{ hashFiles('**/embedded-bins/**/*') }}
          restore-keys: |
            ${{ runner.os }}-embedded-bins-win-${{ hashFiles('**/embedded-bins/**/*') }}

      - name: Build
        run: make k0s.exe

  smoketest:
    name: Smoke test
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Get PR Reference and Set Cache Name
        run: |
          PR_NUMBER=$(echo ${GITHUB_REF} | cut -d / -f 3 )
          echo "cachePrefix=k0s-${PR_NUMBER}-${{ github.sha }}" >> $GITHUB_ENV
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GO_VERSION }}
        id: go

      - name: Cache compiled binary for smoke testing
        uses: actions/cache@v2
        id: restore-compiled-binary
        with:
          path: |
            k0s
          key: build-${{env.cachePrefix}}

      - name: Run test .
        run: make -C inttest check-basic

      - name: Collect test logs
        if: failure()
        uses: actions/upload-artifact@v2
        with:
          path: |
            /tmp/*.log

  smoketest-cli:
    name: Smoke test for CLI
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Get PR Reference and Set Cache Name
        run: |
          PR_NUMBER=$(echo ${GITHUB_REF} | cut -d / -f 3 )
          echo "cachePrefix=k0s-${PR_NUMBER}-${{ github.sha }}" >> $GITHUB_ENV
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GO_VERSION }}
        id: go

      - name: Cache compiled binary for smoke testing
        uses: actions/cache@v2
        id: restore-compiled-binary
        with:
          path: |
            k0s
          key: build-${{env.cachePrefix}}

      - name: Run test .
        run: make -C inttest check-cli

      - name: Collect test logs
        if: failure()
        uses: actions/upload-artifact@v2
        with:
          path: |
            /tmp/*.log

  smoketest-custom-ports:
    name: Smoke test for custom ports (k0s api, kube-api, LB + external address)
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Get PR Reference and Set Cache Name
        run: |
          PR_NUMBER=$(echo ${GITHUB_REF} | cut -d / -f 3 )
          echo "cachePrefix=k0s-${PR_NUMBER}-${{ github.sha }}" >> $GITHUB_ENV
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GO_VERSION }}
        id: go

      - name: Cache compiled binary for smoke testing
        uses: actions/cache@v2
        id: restore-compiled-binary
        with:
          path: |
            k0s
          key: build-${{env.cachePrefix}}

      - name: Run test .
        run: make -C inttest check-customports

      - name: Collect test logs
        if: failure()
        uses: actions/upload-artifact@v2
        with:
          path: |
            /tmp/*.log

  smoketest-calico:
    name: Smoke test for calico setup
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Get PR Reference and Set Cache Name
        run: |
          PR_NUMBER=$(echo ${GITHUB_REF} | cut -d / -f 3 )
          echo "cachePrefix=k0s-${PR_NUMBER}-${{ github.sha }}" >> $GITHUB_ENV
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GO_VERSION }}
        id: go

      - name: Cache compiled binary for smoke testing
        uses: actions/cache@v2
        id: restore-compiled-binary
        with:
          path: |
            k0s
          key: build-${{env.cachePrefix}}

      - name: Run test .
        run: make -C inttest check-calico

      - name: Collect test logs
        if: failure()
        uses: actions/upload-artifact@v2
        with:
          path: |
            /tmp/*.log

  smoketest-cni-change:
    name: Smoke test for preventing CNI change
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Get PR Reference and Set Cache Name
        run: |
          PR_NUMBER=$(echo ${GITHUB_REF} | cut -d / -f 3 )
          echo "cachePrefix=k0s-${PR_NUMBER}-${{ github.sha }}" >> $GITHUB_ENV
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GO_VERSION }}
        id: go

      - name: Cache compiled binary for smoke testing
        uses: actions/cache@v2
        id: restore-compiled-binary
        with:
          path: |
            k0s
          key: build-${{env.cachePrefix}}

      - name: Run test .
        run: make -C inttest check-cnichange

      - name: Collect test logs
        if: failure()
        uses: actions/upload-artifact@v2
        with:
          path: |
            /tmp/*.log

  smoketest-ctr-command:
    name: Smoke test for 'k0s ctr' command
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Get PR Reference and Set Cache Name
        run: |
          PR_NUMBER=$(echo ${GITHUB_REF} | cut -d / -f 3 )
          echo "cachePrefix=k0s-${PR_NUMBER}-${{ github.sha }}" >> $GITHUB_ENV
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GO_VERSION }}
        id: go

      - name: Cache compiled binary for smoke testing
        uses: actions/cache@v2
        id: restore-compiled-binary
        with:
          path: |
            k0s
          key: build-${{env.cachePrefix}}

      - name: Run test .
        run: make -C inttest check-ctr

      - name: Collect test logs
        if: failure()
        uses: actions/upload-artifact@v2
        with:
          path: |
            /tmp/*.log

  smoketest-hacontrolplane:
    name: Smoke test for HA controlplane operations
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Get PR Reference and Set Cache Name
        run: |
          PR_NUMBER=$(echo ${GITHUB_REF} | cut -d / -f 3 )
          echo "cachePrefix=k0s-${PR_NUMBER}-${{ github.sha }}" >> $GITHUB_ENV
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GO_VERSION }}
        id: go

      - name: Cache compiled binary for smoke testing
        uses: actions/cache@v2
        id: restore-compiled-binary
        with:
          path: |
            k0s
          key: build-${{env.cachePrefix}}

      - name: Run hacontrolplane test .
        run: make -C inttest check-hacontrolplane

      - name: Collect test logs
        if: failure()
        uses: actions/upload-artifact@v2
        with:
          path: |
            /tmp/*.log

  smoketest-byocri:
    name: Smoke test for BYO CRI feature
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Get PR Reference and Set Cache Name
        run: |
          PR_NUMBER=$(echo ${GITHUB_REF} | cut -d / -f 3 )
          echo "cachePrefix=k0s-${PR_NUMBER}-${{ github.sha }}" >> $GITHUB_ENV
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GO_VERSION }}
        id: go

      - name: Cache compiled binary for smoke testing
        uses: actions/cache@v2
        id: restore-compiled-binary
        with:
          path: |
            k0s
          key: build-${{env.cachePrefix}}

      - name: Run BYO CRI test .
        run: make -C inttest check-byocri

      - name: Collect test logs
        if: failure()
        uses: actions/upload-artifact@v2
        with:
          path: |
            /tmp/*.log

  smoketest-addons:
    name: Smoke test for helm based addons
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Get PR Reference and Set Cache Name
        run: |
          PR_NUMBER=$(echo ${GITHUB_REF} | cut -d / -f 3 )
          echo "cachePrefix=k0s-${PR_NUMBER}-${{ github.sha }}" >> $GITHUB_ENV
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GO_VERSION }}
        id: go

      - name: Cache compiled binary for smoke testing
        uses: actions/cache@v2
        id: restore-compiled-binary
        with:
          path: |
            k0s
          key: build-${{env.cachePrefix}}

      - name: Run Helm addon test
        run: make -C inttest check-addons

      - name: Collect test logs
        if: failure()
        uses: actions/upload-artifact@v2
        with:
          path: |
            /tmp/*.log

  smoketest-singlenode:
    name: Smoke test for single node k0s
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Get PR Reference and Set Cache Name
        run: |
          PR_NUMBER=$(echo ${GITHUB_REF} | cut -d / -f 3 )
          echo "cachePrefix=k0s-${PR_NUMBER}-${{ github.sha }}" >> $GITHUB_ENV
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GO_VERSION }}
        id: go

      - name: Cache compiled binary for smoke testing
        uses: actions/cache@v2
        id: restore-compiled-binary
        with:
          path: |
            k0s
          key: build-${{env.cachePrefix}}

      - name: Run singlenode test
        run: make -C inttest check-singlenode

      - name: Collect test logs
        if: failure()
        uses: actions/upload-artifact@v2
        with:
          path: |
            /tmp/*.log

  smoketest-kine:
    name: Smoke test for kine backed
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Get PR Reference and Set Cache Name
        run: |
          PR_NUMBER=$(echo ${GITHUB_REF} | cut -d / -f 3 )
          echo "cachePrefix=k0s-${PR_NUMBER}-${{ github.sha }}" >> $GITHUB_ENV
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GO_VERSION }}
        id: go

      - name: Cache compiled binary for smoke testing
        uses: actions/cache@v2
        id: restore-compiled-binary
        with:
          path: |
            k0s
          key: build-${{env.cachePrefix}}

      - name: Run kine test
        run: make -C inttest check-kine

      - name: Collect test logs
        if: failure()
        uses: actions/upload-artifact@v2
        with:
          path: |
            /tmp/*.log


  smoketest-network:
    name: Smoke test for network
    needs: build
    runs-on: ubuntu-latest
    if: false

    steps:
      - name: Get PR Reference and Set Cache Name
        run: |
          PR_NUMBER=$(echo ${GITHUB_REF} | cut -d / -f 3 )
          echo "cachePrefix=k0s-${PR_NUMBER}-${{ github.sha }}" >> $GITHUB_ENV
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GO_VERSION }}
        id: go

      - name: Cache compiled binary for smoke testing
        uses: actions/cache@v2
        id: restore-compiled-binary
        with:
          path: |
            k0s
          key: build-${{env.cachePrefix}}

      - name: Run smoke test .
        run: make -C inttest check-etcd

      - name: Collect test logs
        if: failure()
        uses: actions/upload-artifact@v2
        with:
          path: |
            /tmp/*.log

  smoketest-dualstack:
    name: Smoke test for IPv6 dualstack
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Get PR Reference and Set Cache Name
        run: |
          PR_NUMBER=$(echo ${GITHUB_REF} | cut -d / -f 3 )
          echo "cachePrefix=k0s-${PR_NUMBER}-${{ github.sha }}" >> $GITHUB_ENV
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GO_VERSION }}
        id: go

      - name: Cache compiled binary for smoke testing
        uses: actions/cache@v2
        id: restore-compiled-binary
        with:
          path: |
            k0s
          key: build-${{env.cachePrefix}}

      - name: Run smoke test .
        run: make -C inttest check-dualstack

      - name: Collect test logs
        if: failure()
        uses: actions/upload-artifact@v2
        with:
          path: |
            /tmp/*.log

  smoketest-multicontroller:
    name: Smoke test for multi controller
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Get PR Reference and Set Cache Name
        run: |
          PR_NUMBER=$(echo ${GITHUB_REF} | cut -d / -f 3 )
          echo "cachePrefix=k0s-${PR_NUMBER}-${{ github.sha }}" >> $GITHUB_ENV
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GO_VERSION }}
        id: go

      - name: Cache compiled binary for smoke testing
        uses: actions/cache@v2
        id: restore-compiled-binary
        with:
          path: |
            k0s
          key: build-${{env.cachePrefix}}

      - name: Run multicontroller test
        run: make -C inttest check-multicontroller

      - name: Collect test logs
        if: failure()
        uses: actions/upload-artifact@v2
        with:
          path: |
            /tmp/*.log

  smoketest-airgap:
    name: Smoke test for airgap install
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Get PR Reference and Set Cache Name
        run: |
          PR_NUMBER=$(echo ${GITHUB_REF} | cut -d / -f 3 )
          echo "cachePrefix=k0s-${PR_NUMBER}-${{ github.sha }}" >> $GITHUB_ENV
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GO_VERSION }}
        id: go

      - name: Cache compiled binary for smoke testing
        uses: actions/cache@v2
        id: restore-compiled-binary
        with:
          path: |
            k0s
          key: build-${{env.cachePrefix}}
      # We need the bindata cache too so the makefile targets and deps work properly
      - name: Bindata cache
        uses: actions/cache@v2
        id: generated-bindata
        with:
          path: |
            .bins.linux.stamp
            embedded-bins/staging/linux/bin/
            bindata_linux
            pkg/assets/zz_generated_offsets_linux.go
            embedded-bins/Makefile.variables

          key: ${{ runner.os }}-embedded-bins-${{ hashFiles('**/embedded-bins/**/*') }}
          restore-keys: |
            ${{ runner.os }}-embedded-bins-${{ hashFiles('**/embedded-bins/**/*') }}

      - name: Cache images bundle
        uses: actions/cache@v2
        id: restore-bundle
        with:
          path: |
            image-bundle/bundle.tar
          key: build-image-bundle-${{env.cachePrefix}}

      - name: Run test
        run: make check-airgap

      - name: Cache images bundle
        uses: actions/cache@v2
        id: save-bundle
        with:
          path: |
            image-bundle/bundle.tar
          key: build-image-bundle-${{env.cachePrefix}}

      - name: Collect test logs
        if: failure()
        uses: actions/upload-artifact@v2
        with:
          path: |
            /tmp/*.log

  smoketest-backup:
    name: Smoke test backup & restore
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Get PR Reference and Set Cache Name
        run: |
          PR_NUMBER=$(echo ${GITHUB_REF} | cut -d / -f 3 )
          echo "cachePrefix=k0s-${PR_NUMBER}-${{ github.sha }}" >> $GITHUB_ENV
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GO_VERSION }}
        id: go

      - name: Cache compiled binary for smoke testing
        uses: actions/cache@v2
        id: restore-compiled-binary
        with:
          path: |
            k0s
          key: build-${{env.cachePrefix}}

      - name: Run backup & restore test
        run: make -C inttest check-backup

      - name: Collect test logs
        if: failure()
        uses: actions/upload-artifact@v2
        with:
          path: |
            /tmp/*.log

  smoketest-k0scloudprovider:
    name: Smoke test for k0s-cloud-provider
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Get PR Reference and Set Cache Name
        run: |
          PR_NUMBER=$(echo ${GITHUB_REF} | cut -d / -f 3 )
          echo "cachePrefix=k0s-${PR_NUMBER}-${{ github.sha }}" >> $GITHUB_ENV
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GO_VERSION }}
        id: go
      - name: Cache compiled binary for smoke testing
        uses: actions/cache@v2
        id: restore-compiled-binary
        with:
          path: |
            k0s
          key: build-${{env.cachePrefix}}

      - name: Run k0s-cloud-provider test
        run: make -C inttest check-k0scloudprovider

      - name: Collect test logs
        if: failure()
        uses: actions/upload-artifact@v2
        with:
          path: |
            /tmp/*.log

  smoketest-metrics:
    name: Smoke test metrics server
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Get PR Reference and Set Cache Name
        run: |
          PR_NUMBER=$(echo ${GITHUB_REF} | cut -d / -f 3 )
          echo "cachePrefix=k0s-${PR_NUMBER}-${{ github.sha }}" >> $GITHUB_ENV
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GO_VERSION }}
        id: go

      - name: Cache compiled binary for smoke testing
        uses: actions/cache@v2
        id: restore-compiled-binary
        with:
          path: |
            k0s
          key: build-${{env.cachePrefix}}

      - name: Run metrics server test
        run: make -C inttest check-metrics

      - name: Collect test logs
        if: failure()
        uses: actions/upload-artifact@v2
        with:
          path: |
            /tmp/*.log

  smoketest-disabledcomponents:
    name: Smoke test for disabled components
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: ^1.16
        id: go
      - name: Get PR Reference and Set Cache Name
        run: |
          PR_NUMBER=$(echo ${GITHUB_REF} | cut -d / -f 3 )
          echo "cachePrefix=k0s-${PR_NUMBER}-${{ github.sha }}" >> $GITHUB_ENV
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Cache compiled binary for smoke testing
        uses: actions/cache@v2
        id: restore-compiled-binary
        with:
          path: |
            k0s
          key: build-${{env.cachePrefix}}

      - name: Run smoke test for disabled components
        run: make -C inttest check-disabledcomponents

      - name: Collect test logs
        if: failure()
        uses: actions/upload-artifact@v2
        with:
          path: |
            /tmp/*.log

  smoketest-extraargs:
    name: Smoke test for extra args for kube components
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: ^1.16
        id: go
      - name: Get PR Reference and Set Cache Name
        run: |
          PR_NUMBER=$(echo ${GITHUB_REF} | cut -d / -f 3 )
          echo "cachePrefix=k0s-${PR_NUMBER}-${{ github.sha }}" >> $GITHUB_ENV
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Cache compiled binary for smoke testing
        uses: actions/cache@v2
        id: restore-compiled-binary
        with:
          path: |
            k0s
          key: build-${{env.cachePrefix}}

      - name: Run smoke test for kube extra-args
        run: make -C inttest check-extraargs

      - name: Collect test logs
        if: failure()
        uses: actions/upload-artifact@v2
        with:
          path: |
            /tmp/*.log

  smoketest-configchange:
    name: Smoke test for CRD based config changes
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: ^1.16
        id: go
      - name: Get PR Reference and Set Cache Name
        run: |
          PR_NUMBER=$(echo ${GITHUB_REF} | cut -d / -f 3 )
          echo "cachePrefix=k0s-${PR_NUMBER}-${{ github.sha }}" >> $GITHUB_ENV
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Cache compiled binary for smoke testing
        uses: actions/cache@v2
        id: restore-compiled-binary
        with:
          path: |
            k0s
          key: build-${{env.cachePrefix}}

      - name: Run smoke test for config changes
        run: make -C inttest check-configchange

      - name: Collect test logs
        if: failure()
        uses: actions/upload-artifact@v2
        with:
          path: |
            /tmp/*.log

  smoketest-arm:
    name: Smoke test on arm64
    runs-on: [self-hosted,linux,arm64]

    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GO_VERSION }}
        id: go

      - uses: actions/cache@v2
        name: Go modules cache
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Bindata cache
        uses: actions/cache@v2
        id: generated-bindata
        with:
          path: |
            .bins.linux.stamp
            embedded-bins/staging/linux/bin/
            bindata_linux
            pkg/assets/zz_generated_offsets_linux.go
            embedded-bins/Makefile.variables

          key: ${{ runner.os }}-embedded-bins-${{ hashFiles('**/embedded-bins/**/*') }}-arm64
          restore-keys: |
            ${{ runner.os }}-embedded-bins-${{ hashFiles('**/embedded-bins/**/*') }}-arm64

      - name: Build
        run: make build

      - name: Run test .
        run: make -C inttest check-basic

      - name: Collect test logs
        if: failure()
        uses: actions/upload-artifact@v2
        with:
          path: |
            /tmp/*.log

  smoketest-armv7:
    name: Smoke test on armv7
    runs-on: [self-hosted,linux,arm,lxc]
    steps:
      # We cannot rely on this as it's not working on arm, see https://github.com/actions/setup-go/issues/106
      # Instead we must have proper golang version setup at system level.
      # - name: Set up Go 1.x
      #   uses: actions/setup-go@v2
      #   with:
      #     go-version: ${{ env.GO_VERSION }}
      #   id: go
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - uses: actions/cache@v2
        name: Go modules cache
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Bindata cache
        uses: actions/cache@v2
        id: generated-bindata
        with:
          path: |
            .bins.linux.stamp
            embedded-bins/staging/linux/bin/
            bindata_linux
            pkg/assets/zz_generated_offsets_linux.go
            embedded-bins/Makefile.variables

          key: ${{ runner.os }}-embedded-bins-${{ hashFiles('**/embedded-bins/**/*') }}-armv7
          restore-keys: |
            ${{ runner.os }}-embedded-bins-${{ hashFiles('**/embedded-bins/**/*') }}-armv7

      - name: Build
        run: make build

      - name: Run test .
        run: TIMEOUT=15m make -C inttest check-basic

      - name: Collect test logs
        if: failure()
        uses: actions/upload-artifact@v2
        with:
          path: |
            /tmp/*.log

